List(P(504,24), P(488,8), P(216,296), P(200,312), P(240,304), P(80,410), P(424,368), P(400,332), P(272,496), P(300,460))
       <------------->                                                       <------------->          <------------->

0 : north -> before
1 : north -> after
2 : south -> before
3 : south -> after

order L(P(424,368)) wrt Top(Q(256,256,256)) -> idx = 3
order L(P(504,24)) wrt Top(Q(256,256,256)) -> idx = 0
order L(P(80,410)) wrt Top(Q(256,256,256)) -> idx = 2
order N(Q(416,352,32)) wrt Top(Q(256,256,256)) -> idx = 3
...and south
order L(P(400,332)) wrt N(Q(416,352,32)) -> idx = 1
order N(Q(496,16,16)) wrt Top(Q(256,256,256)) -> idx = 0
...and south
order L(P(488,8)) wrt N(Q(496,16,16)) -> idx = 1
ordered:
List(P(504,24), P(488,8), P(80,410), P(400,332), P(424,368))
       <------------>

             /----T----\
          /--N      /--S--\
         P2        P3      P1

             /----T----\
          /--N      /--S-----\
         P2        P3     /--N1--\
                          N      S ...
                                       P1

             /----T----\
          /--N      /--S--------\
         P2        P3     /-----N1--\
                          N--\       S--\
                             P4         P1

             /----T----\
          /--N      /--S--------\
         N2        P3     /-----N1--\
   P2 ..                  N--\       S--\
                             P4         P1
    Ouch!

:::::::::::::::::::::::::::::::

entscheidend ist die relative position vom
ehemaligen inhalt zur neuen eingefuegten node

  +-------+-------+
  |       |       |
  |       |       |
  |       |       |
  |       |       |
  |       |       |
  |       |       |
  |       |       |
  +-------+-------+
  |       |       |
  |       |       |
  |       |       |
  |       |       |
  |       |       |
  |       |       |
  |       |       |
  +-------+-------+

idx 0,0:
  +-------+---+-+-+
  |       |   | |1|
  |       |   +-+-+
  |       |   |2| |
  |       |   +-+-+
  |       |       |
  |       |       |
  |       |       |
  +-------+-------+
  |       |       |
  |       |       |
  |       |       |
  |       |       |
  |       |       |
  |       |       |
  |       |       |
  +-------+-------+


    :   T
    : N   S
 P1 :
    :
    N1

idx(P1 wrt N1) --> 0
simple : insertBefore(T.North)

idx 0,1:
  +-------+---+-+-+
  |       |   |1| |
  |       |   +-+-+
  |       |   |2| |
  |       |   +-+-+
  |       |       |
  |       |       |
  |       |       |
  +-------+-------+
  |       |       |
  |       |       |
  |       |       |
  |       |       |
  |       |       |
  |       |       |
  |       |       |
  +-------+-------+

vorher:
           T
       N       S
   P1

nachher:
                T
            N       S
      N1
  N       S
    P1

--> which means we have a problem finding the position of N1.North ?!
(because we'd need to go down 'left' of P1 till the bottom which
 is not foreseen by the temporal performance specs)

idea: instead of north / south, we maintain three order entries (boundaries and center)

      case class InnerLeftNode( parent: LeftNode, quad: Quad ) extends LeftNodeImpl {
         val center  = parent.order( this )
         val left    = center.insertBefore( this  )
         val right   = center.insertAfter( this )
         ...
      }

correction : we need five markers ; however markers may be shared between levels?

idx 0,1:
  +-------+---+-+-+
  |       |   |1| |
  |       |   +-+-+
  |       |   |2| |
  |       |   +-+-+
  |       |       |
  |       |       |
  |       |       |
  +-------+-------+
  |       |       |
  |       |       |
  |       |       |
  |       |       |
  |       |       |
  |       |       |
  |       |       |
  +-------+-------+

vorher:
              T
      [   |   |   |   ]
       P1

nachher:
                       T
      [            |   |   |   ]
             N1
      [   |  |  |  ]
           P1 P2


idx 0,2:
  +-------+---+-+-+
  |       |   |2| |
  |       |   +-+-+
  |       |   |1| |
  |       |   +-+-+
  |       |       |
  |       |       |
  |       |       |
  +-------+-------+
  |       |       |
  |       |       |
  |       |       |
  |       |       |
  |       |       |
  |       |       |
  |       |       |
  +-------+-------+

vorher:
              T
      [   |   |   |   ]
       P1

nachher:
                       T
      [            |   |   |   ]
             N1
      [   |  |  |  ]
           P2 P1 

...
  +-------+-+-+---+
  |       |1| |   |
  |       +-+-+ 3 |
  |       |2| |   |
  |       +-+-+---+
  |       |   |   |
  |       |   |   |
  |       |   |   |
  +-------+---+---+
  |       |       |
  |       |       |
  |       |       |
  |       |       |
  |       |       |
  |       |       |
  |       |       |
  +-------+-------+

vorher:
                       T
      [            |   |   |   ]
             N1
      [   |  |  |  ]
           P2 P1 

nachher:
                                 T
      [                      |   |   |   ]
                       N2
      [   |            |  |  ]
       P3      N1
          [   |  |  |  ]
               P2 P1 

--> d.h. die grenze von N1, wenn sie nur eine referenz zu T ist,
muss veraendert werden (gegen die neue von N2 ausgetauscht werden);
und das muss ggf. nach unten propagiert werden.

--> alternativ kann aber auch die linke grenze von T
veraendert werden

::::::::::::::::::::::::

noch andere variante : nur zwei marker, naemlich die aussen grenzen


  +-------+-+-+---+
  |       |1| |   |
  |       +-+-+ 3 |
  |       |2| |   |
  |       +-+-+---+
  |       |   |   |
  |       |   |   |
  |       |   |   |
  +-------+---+---+
  |       |       |
  |       |       |
  |       |       |
  |       |       |
  |       |       |
  |       |       |
  |       |       |
  +-------+-------+

step-by-step:

         T
       [   ]

            T
      [ P1 . . . ]

                T
      [      N1      . . . ]
        [ . P1 . . ]
          

                 T
      [      N1       . . . ]
        [ . P1 P2 . ]
          
                        T
      [             N2          . . . ]
        [ 3     N1       .  . ]
           [ . P1 P2 . ]
          

this actually composes nicely.
